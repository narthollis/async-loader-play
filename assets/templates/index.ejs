<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="mobile-web-app-capable" content="yes" />
        <meta charset="utf-8" />

        <title><%= htmlWebpackPlugin.options.title %></title>
        <script type="text/javascript" id="appBaseUrl">
            window.APP_BASE_URL = '<%- webpackConfig.output.publicPath %>';

            // React Router's Base URL support is case sensative, so lets ensure that the APP_BASE_URL case matches
            // with the current location
            (function() {
                function startsWith(str, searchString) {
                    return str.substr(0, searchString.length) === searchString;
                }

                function startsWithIgnoreCase(str, searchString) {
                    return startsWith(str.toUpperCase(), searchString.toUpperCase());
                }

                var location = (window.location.href + '');
                var locationPre = '';
                var baseUrl = (APP_BASE_URL.substr(-1,1) === '/' ? APP_BASE_URL.substr(0, APP_BASE_URL.length - 1) : APP_BASE_URL);

                // If APP_BASE_URL not a schema absolute URL, work out how much we need to strip from window.location
                if (!startsWithIgnoreCase(baseUrl, 'HTTP')) {
                    var split = location.split('//', 2);
                    // Strip the schema, and then check if APP_BASE_URL is schema relative
                    location = '//' + split[1];
                    locationPre = split[0];

                    // If APP_BASE_URL is not schema relative, assume its path relative
                    if (!startsWithIgnoreCase(baseUrl, '//')) {
                        split = location.substr(2, location.length).split('/');
                        location = '/' + split.slice(1, split.length).join('/');
                        locationPre += '//' + split[0];
                    }
                }

                var needsRedirect = startsWithIgnoreCase(location, baseUrl) && !startsWith(location, baseUrl);
                if (location === baseUrl && baseUrl !== APP_BASE_URL) {
                    needsRedirect = true;
                }

                if (needsRedirect) {
                    var newLocation = locationPre + APP_BASE_URL + location.substr(APP_BASE_URL.length, location.length);
                    // Replace the current URL with the correct one.
                    if (window.history && window.history.replaceState) {
                        window.history.replaceState(window.history.state, window.document.title, newLocation);
                    } else {
                        // If history isn't supported, redirect to the case appropriate version of current href
                        window.location.assign(newLocation);
                    }
                }
            })();
        </script>

    </head>
    <body>

        <div id="root">
            <div>
                <div class="loading">
                    <div class="loading-spinner"></div>
                    <div class="caption">Loading</div>
                </div>
            </div>
        </div>

        <style>
            #root > div > .loading {
                background: #323232;
                width: 10rem;
                height: 8rem;

                padding: 1rem;
                border-radius: 4px;
                text-align: center;
                margin: auto;
            }

            #root > div >  .loading .loading-spinner {
                width: 40px;
                height: 40px;
                margin: auto;
                background-color: #ffffff;
                border-radius: 100%;
                -webkit-animation: sk-scaleout 1.0s infinite ease-in-out;
                animation: sk-scaleout 1.0s infinite ease-in-out;
            }

            #root > div >  .loading .caption {
                font-size: 24px;
                font-style: normal;
            }

            #root > div >  .loading > p {
                margin-top: 1rem;
            }

            @-webkit-keyframes sk-scaleout {
                0% {
                    -webkit-transform: scale(0);
                }
                100% {
                    -webkit-transform: scale(1);
                    opacity: 0;
                }
            }

            @keyframes sk-scaleout {
                0% {
                    -webkit-transform: scale(0);
                    transform: scale(0);
                }
                100% {
                    -webkit-transform: scale(1);
                    transform: scale(1);
                    opacity: 0;
                }
            }
        </style>
    </body>
</html>
